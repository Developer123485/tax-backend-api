name: Production pipeline

on:
  push:
    branches:
      - main

concurrency:
  group: dev-${{ github.ref }}-job1
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet publish --configuration Release --output ./bin/Release/net7.0/publish

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Create SSH key file
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa

    - name: Zip and Transfer files to dev server
      run: |
        PUBLISH_DIR=./bin/Release/net7.0/publish
        ZIP_FILE=publish-$(date "+%Y.%m.%d-%H.%M").zip
        if [ -d "$PUBLISH_DIR" ]; then
          zip -r $ZIP_FILE $PUBLISH_DIR
          scp -i ~/.ssh/id_rsa  -o StrictHostKeyChecking=no -r $ZIP_FILE root@139.84.144.29:/root/backup
        else
          echo "Publish directory $PUBLISH_DIR does not exist."
          exit 1
        fi

    - name: Deploy backend
      run: |
        ssh -i ~/.ssh/id_rsa  -o StrictHostKeyChecking=no  root@139.84.144.29 << 'EOF'
          rm -rf /root/tax-backend-api/*
          file=$(ls -t /root/backup/ | head -n 1)
          echo $file
          unzip /root/backup/$file -d /root/tax-backend-api/
          pids=$(pgrep dotnet)
          if [ -n "$pids" ]; then
            echo "Killing dotnet processes: $pids"
            sudo kill -9 $pids
          else
            echo "No dotnet processes found to kill"
          fi
          sudo systemctl stop taxvahan-backend || echo "Failed to stop taxvahan-backend.service"
          sudo systemctl start taxvahan-backend || echo "Failed to start taxvahan-backend.service"
        EOF
